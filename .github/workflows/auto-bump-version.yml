# Auto Bump Version

# refer: https://github.com/phips28/gh-action-bump-version

name: 'Bump Version and Merge'

on:
  pull_request:
    types: [closed]
    branches:
      - main
  push:
    branches:
      - main

jobs:
  bump-version:
    name: 'Bump Version on main'
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: 'Checkout source code'
        uses: 'actions/checkout@v4'
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0 # fetch all history so we can push to other branches

      - name: 'Create a new branch'
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git checkout -b bump-version

      - name: 'cat package.json'
        run: cat ./package.json

      - name: 'Automated Version Bump'
        id: version-bump
        uses: 'phips28/gh-action-bump-version@master'
        with:
          tag-prefix: 'v'
          commit-message: 'CI: bumps version to {{version}} [skip ci]'
          # minor-wording:  'add,Adds,new'
          # major-wording:  'MAJOR,cut-major'
          # patch-wording:  'patch,fixes'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 'Push changes to the new branch'
        run: git push origin bump-version

      - name: 'Create Pull Request'
        uses: 'actions/github-script@v7'
        with:
          script: |
            const octokit = github.getOctokit(process.env.GITHUB_TOKEN);
            await octokit.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'Bump version to ${{ steps.version-bump.outputs.newTag }}',
              head: 'bump-version',
              base: 'main',
              body: 'This PR bumps the version to ${{ steps.version-bump.outputs.newTag }}',
            });
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 'cat package.json'
        run: cat ./package.json

      - name: 'Output Step'
        env:
          NEW_TAG: ${{ steps.version-bump.outputs.newTag }}
        run: echo "new tag $NEW_TAG"
