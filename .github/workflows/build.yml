# Sample workflow for building a Next.js site
#
# To get started with Next.js see: https://nextjs.org/docs/getting-started
#
name: Build Next.js site

on:
  # Runs on pull_request targeting the default branch
  pull_request:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: 'pages'
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest
        
      - name: Set package manager and command
        run: |
          if [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=pnpm" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine package manager"
            exit 1
          fi
        
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'pnpm'
          
      - name: Restore cache
        uses: actions/cache@v3
        with:
          # See here for caching with `pnpm` https://pnpm.io/continuous-integration or you can leverage caching with actions/setup-node https://github.com/actions/setup-node
          path: |
            ~/.pnpm-store/v3
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-
            
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Build with Next.js
        run: pnpm run build

